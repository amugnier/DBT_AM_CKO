{"results": [{"node": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\n   \t/*SELECT & SHAPE snowflake's sample data to create a test Pageviews_Extract dataset */\r\n\r\nSELECT * \r\nFROM \r\n\r\n    (\r\n    \tSELECT \r\n\r\n        Round(O_CustKEY/100000.0,0)*100000 as user_id, \r\n        'www.website.com/'||O_CLERK as URL,\r\n        \r\n        \t/*Create a timestamp as not available in orginal dataset*/\r\n        (DATEADD(year,25,O_orderdate):: VARCHAR ||' '|| (TIME(cast(uniform(1, 31535999, random()) as datetime))):: VARCHAR) ::datetime as  pageview_datetime\r\n\r\n\r\n\r\n     \tFROM \"SNOWFLAKE_SAMPLE_DATA\".\"TPCH_SF1000\".\"ORDERS\"\r\n\r\n\r\n    \tWHERE  \r\n\t\t\t/*Limit the number of rows*/\r\n    \tDATEADD(year,25,O_orderdate)>DATEADD(month,-1,current_Date()) AND DATEADD(year,25,O_orderdate)<DATEADD(month,1,current_Date())\r\n\r\n\r\n    ) pageview\r\n\r\nWHERE \r\n/*Limit the number of rows*/\r\nDATEADD(hour,-100,LOCALTIMESTAMP())<pageview_Datetime AND pageview_Datetime<LOCALTIMESTAMP()", "compiled": true, "database": "analytics", "schema": "cko_dbt_am", "fqn": ["cko_dbt_am", "pageviews_extract"], "unique_id": "model.cko_dbt_am.pageviews_extract", "package_name": "cko_dbt_am", "root_path": "C:\\Users\\Alexandre\\Desktop\\DBT_learn_test\\CKO_DBT_AM", "path": "pageviews_extract.sql", "original_file_path": "models\\pageviews_extract.sql", "name": "pageviews_extract", "resource_type": "model", "alias": "pageviews_extract", "checksum": {"name": "sha256", "checksum": "2e25098bd80251cd60fc35c860185d924fcca7ff0d1819203b40e9876d1ecaa9"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "pageviews_extract from data source", "columns": {"user_id": {"name": "user_id", "description": "Customer_key can't be null", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models\\schema.yml", "build_path": "target\\run\\cko_dbt_am\\models\\pageviews_extract.sql", "deferred": false, "compiled_sql": "\n\n   \t/*SELECT & SHAPE snowflake's sample data to create a test Pageviews_Extract dataset */\n\nSELECT * \nFROM \n\n    (\n    \tSELECT \n\n        Round(O_CustKEY/100000.0,0)*100000 as user_id, \n        'www.website.com/'||O_CLERK as URL,\n        \n        \t/*Create a timestamp as not available in orginal dataset*/\n        (DATEADD(year,25,O_orderdate):: VARCHAR ||' '|| (TIME(cast(uniform(1, 31535999, random()) as datetime))):: VARCHAR) ::datetime as  pageview_datetime\n\n\n\n     \tFROM \"SNOWFLAKE_SAMPLE_DATA\".\"TPCH_SF1000\".\"ORDERS\"\n\n\n    \tWHERE  \n\t\t\t/*Limit the number of rows*/\n    \tDATEADD(year,25,O_orderdate)>DATEADD(month,-1,current_Date()) AND DATEADD(year,25,O_orderdate)<DATEADD(month,1,current_Date())\n\n\n    ) pageview\n\nWHERE \n/*Limit the number of rows*/\nDATEADD(hour,-100,LOCALTIMESTAMP())<pageview_Datetime AND pageview_Datetime<LOCALTIMESTAMP()", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n   \t/*SELECT & SHAPE snowflake's sample data to create a test Pageviews_Extract dataset */\n\nSELECT * \nFROM \n\n    (\n    \tSELECT \n\n        Round(O_CustKEY/100000.0,0)*100000 as user_id, \n        'www.website.com/'||O_CLERK as URL,\n        \n        \t/*Create a timestamp as not available in orginal dataset*/\n        (DATEADD(year,25,O_orderdate):: VARCHAR ||' '|| (TIME(cast(uniform(1, 31535999, random()) as datetime))):: VARCHAR) ::datetime as  pageview_datetime\n\n\n\n     \tFROM \"SNOWFLAKE_SAMPLE_DATA\".\"TPCH_SF1000\".\"ORDERS\"\n\n\n    \tWHERE  \n\t\t\t/*Limit the number of rows*/\n    \tDATEADD(year,25,O_orderdate)>DATEADD(month,-1,current_Date()) AND DATEADD(year,25,O_orderdate)<DATEADD(month,1,current_Date())\n\n\n    ) pageview\n\nWHERE \n/*Limit the number of rows*/\nDATEADD(hour,-100,LOCALTIMESTAMP())<pageview_Datetime AND pageview_Datetime<LOCALTIMESTAMP()"}, "error": null, "status": "SUCCESS 1", "execution_time": 18.614848613739014, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T09:42:00.639479Z", "completed_at": "2020-11-06T09:42:00.669984Z"}, {"name": "execute", "started_at": "2020-11-06T09:42:00.670983Z", "completed_at": "2020-11-06T09:42:18.982354Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\n\t/*SELECT & SHAPE snowflake's sample data to create a test Users_Extract dataset */\r\n\r\nSELECT \r\n\t\r\n\t C_CustKey as id \r\n\t ,C_ADDRESS as Customer_postcode \r\n\r\nFROM \"SNOWFLAKE_SAMPLE_DATA\".\"TPCH_SF1000\".\"CUSTOMER\"", "compiled": true, "database": "analytics", "schema": "cko_dbt_am", "fqn": ["cko_dbt_am", "users_extract"], "unique_id": "model.cko_dbt_am.users_extract", "package_name": "cko_dbt_am", "root_path": "C:\\Users\\Alexandre\\Desktop\\DBT_learn_test\\CKO_DBT_AM", "path": "users_extract.sql", "original_file_path": "models\\users_extract.sql", "name": "users_extract", "resource_type": "model", "alias": "users_extract", "checksum": {"name": "sha256", "checksum": "ca4ffaf079565cb909b28a3c29f12e61217cb07abc7ab0bc3471b147da93852f"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "users_extract from data source", "columns": {"id": {"name": "id", "description": "Customer_key can't be null", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models\\schema.yml", "build_path": "target\\run\\cko_dbt_am\\models\\users_extract.sql", "deferred": false, "compiled_sql": "\n\n\t/*SELECT & SHAPE snowflake's sample data to create a test Users_Extract dataset */\n\nSELECT \n\t\n\t C_CustKey as id \n\t ,C_ADDRESS as Customer_postcode \n\nFROM \"SNOWFLAKE_SAMPLE_DATA\".\"TPCH_SF1000\".\"CUSTOMER\"", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\t/*SELECT & SHAPE snowflake's sample data to create a test Users_Extract dataset */\n\nSELECT \n\t\n\t C_CustKey as id \n\t ,C_ADDRESS as Customer_postcode \n\nFROM \"SNOWFLAKE_SAMPLE_DATA\".\"TPCH_SF1000\".\"CUSTOMER\""}, "error": null, "status": "SUCCESS 1", "execution_time": 20.134333848953247, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T09:42:19.281839Z", "completed_at": "2020-11-06T09:42:19.339853Z"}, {"name": "execute", "started_at": "2020-11-06T09:42:19.341853Z", "completed_at": "2020-11-06T09:42:39.004230Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(materialized='incremental') }}\r\n/*Add Data from pageviews_history_ephemeral in the table \"tbl_pageviews_history\" selecting only data where the timestamp is greater the the maximun timestamp availble in the table \"tbl_pageviews_history\" */\r\n\tSELECT * FROM {{ref('pageviews_history_ephemeral')}}\r\n\r\n{% if is_incremental() %}\r\n\tWHERE PAGEVIEW_DATE_HOUR > (SELECT max(PAGEVIEW_DATE_HOUR) FROM {{ this }})\r\n{% endif %}", "compiled": true, "database": "analytics", "schema": "cko_dbt_am", "fqn": ["cko_dbt_am", "tbl_pageviews_history"], "unique_id": "model.cko_dbt_am.tbl_pageviews_history", "package_name": "cko_dbt_am", "root_path": "C:\\Users\\Alexandre\\Desktop\\DBT_learn_test\\CKO_DBT_AM", "path": "tbl_pageviews_history.sql", "original_file_path": "models\\tbl_pageviews_history.sql", "name": "tbl_pageviews_history", "resource_type": "model", "alias": "tbl_pageviews_history", "checksum": {"name": "sha256", "checksum": "1c344440054653e27ff0ab1642800f74fbd16ea0f93a2bc12f7a36ff036d1a56"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["pageviews_history_ephemeral"]], "sources": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.cko_dbt_am.pageviews_history_ephemeral"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\run\\cko_dbt_am\\models\\tbl_pageviews_history.sql", "deferred": false, "compiled_sql": "\n/*Add Data from pageviews_history_ephemeral in the table \"tbl_pageviews_history\" selecting only data where the timestamp is greater the the maximun timestamp availble in the table \"tbl_pageviews_history\" */\n\tSELECT * FROM __dbt__CTE__pageviews_history_ephemeral\n\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.cko_dbt_am.pageviews_extract_ephemeral", "sql": " __dbt__CTE__pageviews_extract_ephemeral as (\n/* Config line */\n\n\n/*test query base on Snowflake sample data to represent Users_extract*/ \n\n\n\nSELECT \n\tuser_id\n\t,date_trunc('HOUR', \"PAGEVIEW_DATETIME\") as pageview_date_hour\n\t,count (\"URL\") as count_pageviews\n\t,Count(Distinct \"URL\") as count_disctint_pageviews\n\nFROM \n\t\"ANALYTICS\".\"CKO_DBT_AM\".\"PAGEVIEWS_EXTRACT\"\nGroup By\n\tuser_id\n\t,date_trunc('HOUR', \"PAGEVIEW_DATETIME\")\n)"}, {"id": "model.cko_dbt_am.users_extract_ephemeral", "sql": " __dbt__CTE__users_extract_ephemeral as (\n\n/*Create a ephemaral table that contains only active user in the current pageviews_extract*/\nWITH active_user as (SELECT DISTINCT user_id FROM __dbt__CTE__pageviews_extract_ephemeral)\n\nSELECT *\nFROM \"ANALYTICS\".\"CKO_DBT_AM\".\"USERS_EXTRACT\"\n\nWHERE id IN (SELECT user_id FROM active_user)\n)"}, {"id": "model.cko_dbt_am.pageviews_history_ephemeral", "sql": " __dbt__CTE__pageviews_history_ephemeral as (\n\n\n\n/*Add the current user postcode based on the filtered users list named \"users_extract_ephemeral\" */\n\n\nSELECT \n\tpageviews.*\n\t,customer_postcode -- Postcode of the user when generated\nFROM  __dbt__CTE__pageviews_extract_ephemeral pageviews \nLEFT OUTER JOIN __dbt__CTE__users_extract_ephemeral users  on users.id=pageviews.user_id\n)"}], "injected_sql": "\nwith __dbt__CTE__pageviews_extract_ephemeral as (\n/* Config line */\n\n\n/*test query base on Snowflake sample data to represent Users_extract*/ \n\n\n\nSELECT \n\tuser_id\n\t,date_trunc('HOUR', \"PAGEVIEW_DATETIME\") as pageview_date_hour\n\t,count (\"URL\") as count_pageviews\n\t,Count(Distinct \"URL\") as count_disctint_pageviews\n\nFROM \n\t\"ANALYTICS\".\"CKO_DBT_AM\".\"PAGEVIEWS_EXTRACT\"\nGroup By\n\tuser_id\n\t,date_trunc('HOUR', \"PAGEVIEW_DATETIME\")\n),  __dbt__CTE__users_extract_ephemeral as (\n\n/*Create a ephemaral table that contains only active user in the current pageviews_extract*/\nWITH active_user as (SELECT DISTINCT user_id FROM __dbt__CTE__pageviews_extract_ephemeral)\n\nSELECT *\nFROM \"ANALYTICS\".\"CKO_DBT_AM\".\"USERS_EXTRACT\"\n\nWHERE id IN (SELECT user_id FROM active_user)\n),  __dbt__CTE__pageviews_history_ephemeral as (\n\n\n\n/*Add the current user postcode based on the filtered users list named \"users_extract_ephemeral\" */\n\n\nSELECT \n\tpageviews.*\n\t,customer_postcode -- Postcode of the user when generated\nFROM  __dbt__CTE__pageviews_extract_ephemeral pageviews \nLEFT OUTER JOIN __dbt__CTE__users_extract_ephemeral users  on users.id=pageviews.user_id\n)/*Add Data from pageviews_history_ephemeral in the table \"tbl_pageviews_history\" selecting only data where the timestamp is greater the the maximun timestamp availble in the table \"tbl_pageviews_history\" */\n\tSELECT * FROM __dbt__CTE__pageviews_history_ephemeral\n\n"}, "error": null, "status": "SUCCESS 1", "execution_time": 13.073582649230957, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T09:42:39.659665Z", "completed_at": "2020-11-06T09:42:39.693169Z"}, {"name": "execute", "started_at": "2020-11-06T09:42:39.694169Z", "completed_at": "2020-11-06T09:42:52.478215Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\nSELECT \r\n\tpageviews.* -- Pageviews contains our Table tbl_Pageviews_history\r\n\t,users.customer_postcode as Latest_Post_code -- Add the latest postcode stored in the the table \"USERS_EXTRACT\"\r\nFROM  {{ ref('tbl_pageviews_history') }} pageviews\r\nLEFT OUTER JOIN \"ANALYTICS\".\"CKO_DBT_AM\".\"USERS_EXTRACT\" users  on users.id=pageviews.user_id", "compiled": true, "database": "analytics", "schema": "cko_dbt_am", "fqn": ["cko_dbt_am", "view_pageviews_history_Latest_PostCode"], "unique_id": "model.cko_dbt_am.view_pageviews_history_Latest_PostCode", "package_name": "cko_dbt_am", "root_path": "C:\\Users\\Alexandre\\Desktop\\DBT_learn_test\\CKO_DBT_AM", "path": "view_pageviews_history_Latest_PostCode.sql", "original_file_path": "models\\view_pageviews_history_Latest_PostCode.sql", "name": "view_pageviews_history_Latest_PostCode", "resource_type": "model", "alias": "view_pageviews_history_Latest_PostCode", "checksum": {"name": "sha256", "checksum": "7d1fb4b96b82ee47316ab4ccaa6e24247d87f208fcce7764f7a9d403a3748ea1"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["tbl_pageviews_history"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.cko_dbt_am.tbl_pageviews_history"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\run\\cko_dbt_am\\models\\view_pageviews_history_Latest_PostCode.sql", "deferred": false, "compiled_sql": "\n\nSELECT \n\tpageviews.* -- Pageviews contains our Table tbl_Pageviews_history\n\t,users.customer_postcode as Latest_Post_code -- Add the latest postcode stored in the the table \"USERS_EXTRACT\"\nFROM  analytics.cko_dbt_am.tbl_pageviews_history pageviews\nLEFT OUTER JOIN \"ANALYTICS\".\"CKO_DBT_AM\".\"USERS_EXTRACT\" users  on users.id=pageviews.user_id", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nSELECT \n\tpageviews.* -- Pageviews contains our Table tbl_Pageviews_history\n\t,users.customer_postcode as Latest_Post_code -- Add the latest postcode stored in the the table \"USERS_EXTRACT\"\nFROM  analytics.cko_dbt_am.tbl_pageviews_history pageviews\nLEFT OUTER JOIN \"ANALYTICS\".\"CKO_DBT_AM\".\"USERS_EXTRACT\" users  on users.id=pageviews.user_id"}, "error": null, "status": "SUCCESS 1", "execution_time": 5.943582057952881, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-06T09:42:52.792255Z", "completed_at": "2020-11-06T09:42:52.925270Z"}, {"name": "execute", "started_at": "2020-11-06T09:42:52.927770Z", "completed_at": "2020-11-06T09:42:57.720689Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-11-06T09:43:01.631142Z", "elapsed_time": 70.00674438476562}